
// This file has been generated by the GUI designer. Do not modify.

public partial class CheckovUI
{
	private global::Gtk.Notebook notebook1;
	private global::Gtk.VBox vbox1;
	private global::Gtk.Label currentItem;
	private global::Gtk.Button launch;
	private global::Gtk.HBox hbox2;
	private global::Gtk.Button back;
	private global::Gtk.Entry notes;
	private global::Gtk.Button ok;
	private global::Gtk.Button quit;
	private global::Gtk.Label label1;
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	private global::Gtk.TreeView tree;
	private global::Gtk.Label label2;
	
	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget CheckovUI
		this.Name = "CheckovUI";
		this.Title = "CheckList";
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child CheckovUI.Gtk.Container+ContainerChild
		this.notebook1 = new global::Gtk.Notebook ();
		this.notebook1.CanFocus = true;
		this.notebook1.Name = "notebook1";
		this.notebook1.CurrentPage = 0;
		// Container child notebook1.Gtk.Notebook+NotebookChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.currentItem = new global::Gtk.Label ();
		this.currentItem.Name = "currentItem";
		this.currentItem.LabelProp = "Item";
		this.currentItem.UseMarkup = true;
		this.currentItem.Wrap = true;
		this.vbox1.Add (this.currentItem);
		global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.currentItem]));
		w1.Position = 0;
		w1.Padding = ((uint)(20));
		// Container child vbox1.Gtk.Box+BoxChild
		this.launch = new global::Gtk.Button ();
		this.launch.CanFocus = true;
		this.launch.Name = "launch";
		this.launch.UseUnderline = true;
		this.launch.Label = "Launch Autopilot...";
		this.vbox1.Add (this.launch);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.launch]));
		w2.Position = 1;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hbox2 = new global::Gtk.HBox ();
		this.hbox2.Name = "hbox2";
		this.hbox2.Spacing = 6;
		// Container child hbox2.Gtk.Box+BoxChild
		this.back = new global::Gtk.Button ();
		this.back.CanFocus = true;
		this.back.Name = "back";
		this.back.UseStock = true;
		this.back.UseUnderline = true;
		this.back.Label = "gtk-go-back";
		this.hbox2.Add (this.back);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.back]));
		w3.Position = 0;
		w3.Expand = false;
		w3.Fill = false;
		w3.Padding = ((uint)(5));
		// Container child hbox2.Gtk.Box+BoxChild
		this.notes = new global::Gtk.Entry ();
		this.notes.TooltipMarkup = "Notes...";
		this.notes.CanFocus = true;
		this.notes.Name = "notes";
		this.notes.IsEditable = true;
		this.notes.ActivatesDefault = true;
		this.notes.InvisibleChar = 'â€¢';
		this.hbox2.Add (this.notes);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.notes]));
		w4.Position = 1;
		w4.Padding = ((uint)(5));
		// Container child hbox2.Gtk.Box+BoxChild
		this.ok = new global::Gtk.Button ();
		this.ok.CanFocus = true;
		this.ok.Name = "ok";
		this.ok.UseStock = true;
		this.ok.UseUnderline = true;
		this.ok.Label = "gtk-ok";
		this.hbox2.Add (this.ok);
		global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.ok]));
		w5.Position = 2;
		w5.Expand = false;
		w5.Fill = false;
		w5.Padding = ((uint)(5));
		// Container child hbox2.Gtk.Box+BoxChild
		this.quit = new global::Gtk.Button ();
		this.quit.CanFocus = true;
		this.quit.Name = "quit";
		this.quit.UseStock = true;
		this.quit.UseUnderline = true;
		this.quit.Label = "gtk-quit";
		this.hbox2.Add (this.quit);
		global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.quit]));
		w6.PackType = ((global::Gtk.PackType)(1));
		w6.Position = 3;
		w6.Expand = false;
		w6.Fill = false;
		w6.Padding = ((uint)(5));
		this.vbox1.Add (this.hbox2);
		global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox2]));
		w7.PackType = ((global::Gtk.PackType)(1));
		w7.Position = 2;
		w7.Expand = false;
		w7.Fill = false;
		w7.Padding = ((uint)(5));
		this.notebook1.Add (this.vbox1);
		// Notebook tab
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.LabelProp = "Current";
		this.notebook1.SetTabLabel (this.vbox1, this.label1);
		this.label1.ShowAll ();
		// Container child notebook1.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.tree = new global::Gtk.TreeView ();
		this.tree.CanFocus = true;
		this.tree.Name = "tree";
		this.GtkScrolledWindow.Add (this.tree);
		this.notebook1.Add (this.GtkScrolledWindow);
		global::Gtk.Notebook.NotebookChild w10 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.GtkScrolledWindow]));
		w10.Position = 1;
		// Notebook tab
		this.label2 = new global::Gtk.Label ();
		this.label2.Name = "label2";
		this.label2.LabelProp = "Completed";
		this.notebook1.SetTabLabel (this.GtkScrolledWindow, this.label2);
		this.label2.ShowAll ();
		this.Add (this.notebook1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 455;
		this.DefaultHeight = 300;
		this.launch.Hide ();
		this.quit.Hide ();
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.KeyPressEvent += new global::Gtk.KeyPressEventHandler (this.WindowKeyPressEvent);
		this.launch.Pressed += new global::System.EventHandler (this.Launch);
		this.back.Pressed += new global::System.EventHandler (this.OnBackPressed);
		this.notes.FocusInEvent += new global::Gtk.FocusInEventHandler (this.OnNotesFocusInEvent);
		this.notes.FocusOutEvent += new global::Gtk.FocusOutEventHandler (this.OnNotesFocusOutEvent);
		this.ok.Pressed += new global::System.EventHandler (this.OkPressed);
		this.quit.Pressed += new global::System.EventHandler (this.OnDeleteEvent);
	}
}
